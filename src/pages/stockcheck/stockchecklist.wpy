<style lang="less">
  @import "../../less/mixin";

  page {
    height: auto;
    padding-bottom: 120rpx;
  }

  .stock-item {
    background-color: #fff;
    border-radius: 20rpx;
    padding: 20rpx 30rpx;
    margin: 12rpx;
  }

  .stock-item-header {
    padding: 3px 5px 10px;
    margin-bottom: 10px;
    border-bottom: 1px solid #ddd;
    font-size: 32rpx;
  }

  .stock-body {
    .flex();
  }

  .stock-legend {
    .flex-v-center();
    font-size: 32rpx;
    width: 180rpx;
    border-right: 2rpx solid #ccc;
  }

  .stock-main {
    flex: 1;
    .flex();
  }

  .stock-diff-item {
    flex: 1;
    text-align: center;

    .title {
      font-size: 32rpx;
      margin-bottom: 30rpx;
    }

    .text {
      color: #888;
      font-size: 26rpx;
    }
  }

  .stock-sublist {
    margin-top: 20rpx;
    padding-top: 12rpx;
    border-top: 2rpx solid #ccc;
  }

  .stock-subview {
    .flex();
    margin-top: 6rpx;
    margin-bottom: 6rpx;

    .stock-subitem {
      flex: 1;
      color: #888;
      font-size: 26rpx;

      &:first-child {
        flex: none;
        width: 180rpx;
      }

      &:not(:first-child) {
        text-align: center;
      }

      &.hd {
        font-size: 28rpx;
        color: #444;
      }
    }
  }

  .stock-action {
    position: fixed;
    left: 0;
    right: 0;
    bottom: 20rpx;
    text-align: center;

    .export-button {
      display: block;
      width: 35%;
    }
  }

  .download-url {
    padding: 16rpx 30rpx;
    border: 2rpx solid #c5c5c5;
    background-color: #f0f0f0;
    color: #01458e;
    border-radius: 8rpx;
    margin-top: 10rpx;
    word-wrap: break-word;
    word-break: break-all;

    &:active {
      background-color: #ececec;
    }
  }

  .pie-container {
    background-color: #fff;
    margin-bottom: 10px;
  }

  .pie-title {
    font-size: 16px;
    font-weight: bold;
    color: #666;
    text-align: center;
    margin-top: 10px;
    margin-bottom: 5px;
  }

  .pie-chart {
    width: 100%;
    height: 240px;
    margin: 0 auto;

    canvas {
      width: 100%;
      height: 100%;
    }
  }

  .pie-summary {
    margin-top: -5px;
    font-weight: bold;
    color: #666;
    padding: 0 15px 10px;
  }
</style>
<template>
  <block wx:if="{{loaded}}">
    <repeat for="{{result.chart}}" key="index">
      <view class="pie-container">
        <view class="pie-title">{{item.title}}</view>
        <view class="pie-chart">
          <canvas canvas-id="pieCanvas{{index}}" wx:if="{{!hideCanvas}}"></canvas>
        </view>
        <view class="pie-summary">汇总：{{item.total}}</view>
      </view>
    </repeat>

    <view class="stock-item">
      <view class="stock-item-header">
        <view>扫码盘库产品总数：{{totalCount}}</view>
        <view wx:if="{{newVersion}}">DMS系统库存总数：{{dmsTotalCount}}</view>
      </view>
      <view class="stock-body">
        <view class="stock-legend">整体准确率</view>
        <view class="stock-main">
          <view class="stock-diff-item">
            <view class="title">UPN</view>
            <view class="text">{{result.upn}}%</view>
          </view>
          <view class="stock-diff-item">
            <view class="title">LOT</view>
            <view class="text">{{result.lot}}%</view>
          </view>
          <view class="stock-diff-item">
            <view class="title">QR</view>
            <view class="text">{{result.qr}}%</view>
          </view>
        </view>
      </view>
    </view>

    <repeat for="{{result.detail}}" index="index">
      <view class="stock-item">
        <view class="stock-body">
          <view class="stock-legend">{{item.name}}</view>
          <view class="stock-main">
            <view class="stock-diff-item">
              <view class="title">UPN</view>
              <view class="text">{{item.diff.upn}}%</view>
            </view>
            <view class="stock-diff-item">
              <view class="title">LOT</view>
              <view class="text">{{item.diff.lot}}%</view>
            </view>
            <view class="stock-diff-item">
              <view class="title">QR</view>
              <view class="text">{{item.diff.qr}}%</view>
            </view>
          </view>
        </view>
        <view class="stock-sublist" wx:if="{{item.stocks.length > 0}}">
          <view class="stock-subview">
            <view class="stock-subitem hd">仓库类型</view>
            <view class="stock-subitem hd">UPN</view>
            <view class="stock-subitem hd">LOT</view>
            <view class="stock-subitem hd">QR</view>
          </view>
          <repeat for="{{item.stocks}}">
            <view class="stock-subview">
              <view class="stock-subitem">{{item.name}}</view>
              <view class="stock-subitem">{{item.diff.upn}}%</view>
              <view class="stock-subitem">{{item.diff.lot}}%</view>
              <view class="stock-subitem">{{item.diff.qr}}%</view>
            </view>
          </repeat>
        </view>
      </view>
    </repeat>

    <cover-view class="stock-action">
      <!--<exportButton inline="true" class="export-button" @tap.user="onExportTap">导出</exportButton>-->
      <button class="button primary export-button" @tap="onExportTap">导出</button>
    </cover-view>

    <modal :show.sync="isModalShow" title="提示信息">
      <view>点击复制下面的链接去浏览器下载</view>
      <view class="download-url" @tap="onDownloadTap">{{result.fileName}}</view>
    </modal>
  </block>
</template>

<script>
  import wepy from 'wepy'
  import fetch, {serverUrl} from '../../service/fetch'
  import Button from '../../components/button'
  import Modal from '../../components/modal'
  import {showError, showToast} from '../../utils/util'
  import WxCharts from '../../utils/wxcharts'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '云盘库'
    }

    components = {
      modal: Modal,
      exportButton: Button
    }

    inventoryId = null

    data = {
      result: {},
      totalCount: '',
      dmsTotalCount: '',
      newVersion: false,
      loaded: false,
      isModalShow: false
    }

    computed = {
      hideCanvas() {
        return this.isModalShow
      }
    }

    watch = {
      isModalShow(val) {
        this.hideCanvas = val
        if (!val) {
          this.createPieCharts(this.result.chart)
        }
      }
    }

    methods = {
      closeModal () {
        this.hideModal()
      },
      onExportTap () {
        this.showModal()
      },
      async onDownloadTap () {
        const data = this.result.fileName
        await wepy.setClipboardData({ data })
        const res = await wepy.getClipboardData()
        if (res.data === data) {
          showToast('复制成功')
        } else {
          showError('复制失败，请手动长按复制')
        }
      }
    }

    showModal () {
      this.isModalShow = true
      this.$apply()
    }

    hideModal () {
      this.isModalShow = false
      this.$apply()
    }

    queryList(inventoryId) {
      fetch.get('query/inventoryResult', { inventoryId }).then(res => {
        if (res.success) {
          let data = res.data
          data.chart = (data.chart || []).map(item => ({...item, total: item.list.reduce((p, c) => c.data + p, 0)}))
          this.result = data
          this.result.fileName = serverUrl + 'inventory/' + this.result.fileName
          this.loaded = true
          this.newVersion = data.isNewFile
          this.dmsTotalCount = data.sysTotal
          this.$apply()
          this.createPieCharts(this.result.chart)
        } else {
          showError(res.message)
        }
      }, errMsg => {
        showError(errMsg)
      })
    }

    createPieCharts(chartsData) {
      let windowWidth = 320
      try {
        let res = wx.getSystemInfoSync()
        windowWidth = res.windowWidth
      } catch (e) {
        console.error('getSystemInfoSync failed!')
      }
      chartsData.forEach((item, i) => {
        this.createPieChart(item.list, `pieCanvas${i}`, windowWidth, 240)
      })
    }

    createPieChart(series, canvasId, width, height) {
      series = series.map(item => ({
        ...item,
        format: () => item.name + ',' + item.data
      }))
      return new WxCharts({
        animation: true,
        legend: false,
        dataLabel: true,
        type: 'pie',
        canvasId,
        series,
        width,
        height
      })
    }

    onLoad (params) {
      if (params.id) {
        this.inventoryId = params.id
      }
      this.totalCount = params.count
      this.queryList(this.inventoryId)
    }
  }
</script>
